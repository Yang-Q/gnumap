#!/usr/bin/perl -w
#changjin.hong@gmail.com
#objectives: want to filter out methylation data from the snp-type report file which is generated by sam2gmp program by Nathan (gnumap)

my $inSnpFN = $ARGV[0]; #snp report format gmp file
my $gnuNtConv = $ARGV[1]; #gnumap option (ct/ga/ag/tc?)l
my $outGmpFN= $ARGV[2]; #concatenated assigned outfile name
#select mode (forward or reverse alignment)

print STDOUT "preprocessing an input($inSnpFN,conversion:$gnuNtConv) of sam2gmp...";
#open input file
open(snpInFp,"< $inSnpFN") || die "cannot open file $inSnpFN.\n";

#open output file
open(gmpOutFp,"> $outGmpFN") || die "cannot open file $inSnpFN.\n";

#parse the line to each word
#-check if column C is not 0
#-check if N:c->t
#or
#-check if column G is not 0
#-check if N:g->a
my $lastCol=8;
my @words;
my $pat2search;
my $col2consider1;
my $col2consider2;
my $sLine;

if ($gnuNtConv eq "ct") {
	$pat2search='c->(.*)t';
	$col2consider1=4;
	#$col2consider2=6;
}
elsif ($gnuNtConv eq "ga") {
	$pat2search='g->(.*)a';
	$col2consider1=5;
	#$col2consider2=3;
}
elsif ($gnuNtConv eq "ag") {
	$pat2search='a->(.*)g';
	$col2consider1=3;
	#$col2consider2=3;
}

elsif ($gnuNtConv eq "tc") {
	$pat2search='t->(.*)c';
	$col2consider1=6;
	#$col2consider2=3;
}

#read line
while ($sLine=<snpInFp>) {
	@words = split('\t',$sLine);
	
	if ((($words[$col2consider1]+0.0)>0.0) || ($words[$lastCol] =~ m/$pat2search/)) {
	#if ((($words[$col2consider1]+0.0)>0.0) || ($words[$col2consider2]+0.0)>0.0) {
		#write the current line to the output file
		printf gmpOutFp $sLine;
	}
}
close(snpInFp);
close(gmpOutFp);
print STDOUT "done.\n";